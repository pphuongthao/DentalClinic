
@{
    ViewBag.Title = "AddDoctor";
}
@section styles{
    <style>
        .form-insert h2 {
            text-align: center;
        }

        .form-insert {
            display: flex;
        }

        .body {
            display: flex;
        }

        .left {
            padding-bottom: 20px;
            padding-top: 20px;
            width: 200px;
        }

        .right {
            display: flex;
            flex: 2;
            flex-direction: column;
            padding: 15px;
        }

        .preview-insert {
            padding-top: 10px;
        }

        .bottom {
            padding-right: 20px;
        }
    </style>
}


<div id="modal-insert" class="modal-insert">
    <div class="modal-custom-insert">
        <div class="form-insert">
            <div style="flex:1;"><h2>CẬP NHẬT BÁC SĨ</h2></div>
            <div style="padding-right: 20px; "><button style="width: 150px;" class="btn btn-primary" onclick="AddDoctor();">Thêm bác sĩ</button></div>
        </div>
        <div class="body" style="display:flex">
            <div class="left">
                <div class="preview-insert">
                    <div class="preview" style="width: 200px; height: 200px; background-position: center; background-repeat: no-repeat; background-size: cover; border: .5px solid #d7d7d7; cursor: pointer; background-image: url('/Content/img/pick-image.png');" onclick="ChooseThumbnail(this);"></div>
                    <input type="file" style="display: none;" onchange="ChooseThumbnail_OnChange(this);" required />
                    <input type="hidden" id="Avatar" />
                </div>
            </div>

            <div class="right">
                <div class="form-group">
                    <label class="font-weight-semibold" for="name">Tên bác sĩ</label>
                    <input type="text" class="form-control" id="Name" placeholder="Nhập tên bác sĩ" required>
                </div>
                <div class="form-group">
                    <label class="font-weight-semibold" for="name">Trình độ chuyên môn</label>
                    <textarea class="form-control" aria-label="With textarea" style="resize:none;" placeholder="Nhập trình độ chuyên môn" rows="3" id="Qualification"></textarea>
                </div>
            </div>
        </div>
        <div class="bottom">
            <label class="font-weight-semibold" for="name">Mô tả</label>
            <textarea class="form-control" aria-label="With textarea" style="resize:none;" placeholder="Nhập lời mô tả" rows="10" id="Content"></textarea>
        </div>
    </div>

</div>
@section scripts{
    <script src="/Content/ckeditor/ckeditor.js"></script>
    @*<script src="~/Content/ckfinder/ckfinder.js"></script>*@
    <script>
        var contentEditor = CKEDITOR.replace('Content', {
            width: '100%',
            resize_minHeight: 150,
            height: '55vh',
            ...(window.configCkFinder || {})
        });

        var ChooseThumbnail = function (el) { $(el).siblings('input[type=file]').click(); }
        var ChooseThumbnail_OnChange = function (el) {
            let reader = new FileReader();
            reader.onloadend = function (e) {
                $(el).siblings('input[type=hidden]').val(e.currentTarget.result.substring(e.currentTarget.result.indexOf(',') + 1, e.currentTarget.result.length));
                $(el).siblings('.preview').css('background-image', `url(${e.currentTarget.result})`);
            }
            reader.readAsDataURL(el.files[0])
        }

        const AddDoctor = async function () {
            let model = {
                DoctorId: '',
                Avatar: $('#Avatar').val(),
                Name: $('#Name').val(),
                SearchName: RemoveVietnameseTones($('#Name').val()),
                Qualification: $('#Qualification').val(),
                Description: contentEditor.getData()
            };
            if (model.Avatar === '') {
                alert("Bạn cần thêm ảnh"); return;
            }
            if (GetObjectProperty(model, 'Name') === '') { alert('Tên bác sĩ không được để trống'); return; }
            if (GetObjectProperty(model, 'Description') === '') { alert('Mô tả không được để trống'); return; }
            if (GetObjectProperty(model, 'Qualification') === '') { alert('Trình độ chuyên môn không được để trống'); return; }
            const rp = await fetch('/api/AdminDoctor/InsertDoctor', {
                method: 'post',
                headers: Enum.OptionHeaderDefault,
                body: JSON.stringify(model)
            });
            let rs = await rp.json();

            console.log(rs);

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                if (rs.message !== '' && rs.message !== null) alert(rs.message);
                alert('Thêm bác sĩ thành công');
                window.location.href = '/Admin/ManageDoctor/';
            }
        }
    </script>
}