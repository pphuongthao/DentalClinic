
@{
    ViewBag.Title = "UpdateUserInfo";
    ViewBag.Menu = "manage-user";
}

@section styles{
    <style>
        .account-page-content .main-content {
            padding: 10px 10px 10px 10px !important;
        }

        #tab-info {
            display: flex;
            background-color: white;
            padding: 40px;
        }

            #tab-info .tab-avatar {
                flex: 1;
            }

                #tab-info .tab-avatar .preview {
                    width: 150px;
                    height: 150px;
                    background-position: center;
                    background-repeat: no-repeat;
                    background-size: cover;
                    border: .5px solid #d7d7d7;
                    cursor: pointer;
                }

            #tab-info .info-detail {
                flex: 4;
            }

                #tab-info .info-detail .form-custom {
                    display: flex;
                    margin-bottom: 10px;
                }

                    #tab-info .info-detail .form-custom .label-custom {
                        display: flex;
                        min-width: 170px;
                        font-size: 1rem;
                        line-height: 1.4;
                        align-items: center;
                    }

                        #tab-info .info-detail .form-custom .label-custom label {
                            margin-bottom: 0;
                        }

                    #tab-info .info-detail .form-custom input {
                        padding: .55rem 1rem;
                        height: auto;
                        color: #53535f;
                        border: 1px solid #edf2f9;
                        font-size: .875rem;
                        line-height: 1.4;
                        border-radius: 5px;
                        width: 60%;
                    }

                    #tab-info .info-detail .form-custom select {
                        padding: .55rem 1rem;
                        height: auto;
                        color: #53535f;
                        border: 1px solid #edf2f9;
                        font-size: .875rem;
                        line-height: 1.4;
                        border-radius: 5px;
                        width: 60%;
                    }

                #tab-info .info-detail .tab-function {
                    display: flex;
                    margin-top: 50px;
                    justify-content: end;
                    width: 75%;
                    gap: 15px;
                }

                    #tab-info .info-detail .tab-function .update-btn {
                        padding: 10px 20px;
                        border: solid 0.5px red;
                        border-radius: 10px;
                        margin: 10px;
                        cursor: pointer;
                        color: red;
                    }

                    #tab-info .info-detail .tab-function .enable-btn {
                        padding: 10px 20px;
                        border: solid #dedede 0.5px;
                        border-radius: 10px;
                        margin: 10px;
                        cursor: pointer;
                    }

        .modal {
            position: fixed;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            background: rgba(0,0,0,0.4);
            display: none;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }

        .modal-container {
            background-color: #fff;
            width: 900px;
            max-width: calc(100% - 32px);
            position: relative;
            animation: modalFadeIn ease 0.5s;
            transition: top 0.4s, opacity 0.4s;
        }

        .modal-header {
            height: 70px;
            display: flex;
            align-items: center;
            justify-content: center !important;
            font-size: 20px;
            border-bottom: solid #ccc 0.5px;
            text-transform: uppercase;
        }

        .modal-body {
            width: 90%;
            margin: auto;
        }

        .modal-footer {
            width: 90%;
            margin: auto;
            justify-content: end;
            display: flex;
            gap: 10px;
            padding-bottom: 10px;
        }

            .modal-footer .update-btn {
                width: 100px;
                padding: 5px 5px;
                background-color: #435ebe;
                color: white;
                border-radius: 5px;
                cursor: pointer;
                border: solid #435ebe 1px;
            }

            .modal-footer .close-modal {
                width: 80px;
                color: black;
                border: solid #ccc 0.5px;
                cursor: pointer;
                border-radius: 5px;
            }

        @@keyframes modalFadeIn {
            from {
                opacity: 0;
                transform: translateY(-200px);
            }

            to {
                transform: translateY(0px);
                opacity: 1;
            }
        }

        .modal .modal-body .list-image {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            width: 100%;
        }

            .modal .modal-body .list-image .form-group {
                width: 30%;
            }

                .modal .modal-body .list-image .form-group .preview {
                    width: 100%;
                    background-position: center;
                    background-repeat: no-repeat;
                    background-size: contain;
                    height: 100px;
                    border-radius: 10px;
                    border: .5px solid #d7d7d7;
                    cursor: pointer;
                }

        .accuracy {
            color: green;
            padding: 10px;
            font-size: 18px;
        }
    </style>
}


<div class="account-page-content">
    <div class="main-content">
        <div class="page-header no-gutters has-tab">

            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" href="/Admin/ManageUser/UpdateUserInfo/@ViewBag.Id">Thông tin cá nhân</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link " href="/Admin/ManageUser/UserAppointment/@ViewBag.Id">Lịch sử đặt hẹn</a>
                </li>
            </ul>
        </div>
        <div class="">
            <div class="tab-content m-t-15">
                <div class="tab-pane fade show active" id="tab-info">
                    <div class="tab-avatar">
                    </div>
                    <div class="info-detail" id="info-detail">
                        <input id="userId" style="display:none" value="" />
                        <div class="form-custom">
                            <div class="label-custom">
                                <label class="font-weight-semibold" for="Name">Họ tên:</label>
                            </div>
                            <input type="text" class="" id="Name" placeholder="Họ và tên" value="">
                        </div>

                        <div class="form-custom">
                            <div class="label-custom">
                                <label class="font-weight-semibold" for="Account">Tên đăng nhập:</label>
                            </div>
                            <input type="text" class="" id="Account" placeholder="Tên đăng nhập" value="" disabled>
                        </div>

                        <div class="form-custom">
                            <div class="label-custom">
                                <label class="font-weight-semibold" for="Email">Email:</label>
                            </div>
                            <input type="text" class="" id="Email" placeholder="Email" value="">
                        </div>

                        <div class="form-custom">
                            <div class="label-custom">
                                <label class="font-weight-semibold" for="phoneNum">Số điện thoại:</label>
                            </div>
                            <input type="text" class="" id="phoneNum" placeholder="Số điện thoại" value="" >
                        </div>

                        <div class="form-custom">
                            <div class="label-custom">
                                <label class="font-weight-semibold" for="fullAddress">Địa chỉ:</label>
                            </div>
                            <input type="text" class="" id="fullAddress" placeholder="Địa chỉ chi tiết" value="">
                        </div>

                        <div class="form-custom">
                            <div class="label-custom">
                                <label class="font-weight-semibold" for="password">Mật khẩu:</label>
                            </div>
                            <input type="text" class="" id="password" placeholder="Mật khẩu" value="">
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
</div>




@section Scripts{
    <script>
        var Choose = function (el) { $(el).siblings('input[type=file]').click(); }
        var Choose_OnChange = function (el) {
            let reader = new FileReader();
            reader.onloadend = function (e) {
                $(el).siblings('input[type=hidden]').val(e.currentTarget.result.substring(e.currentTarget.result.indexOf(',') + 1, e.currentTarget.result.length));
                $(el).siblings('.preview').css('background-image', `url(${e.currentTarget.result})`);
            }
            reader.readAsDataURL(el.files[0])
        }


        const getUserDetail = async function () {
            const id = "@ViewBag.Id";

            let rq = await fetch(Enum.ApiUrl + '/api/ManageUser/GetUserDetail?userId=' + id, {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rq.json();
            console.log(rs);
            if (AdminCheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                let html1 = '<div class="form-group">';
                html1 += '<div class="preview" style="background-image: url('+rs.data.Avatar +');" onclick = "Choose(this);" ></div >';
                html1 += '<input type="file" style="display:none;" onchange="Choose_OnChange(this);"/>';
                html1 += '<input type="hidden" id="Thumnail" /></div>';

                $('.tab-avatar').append(html1);
                $('#userId').val(rs.data.UserId);
                $('#Name').val(rs.data.Name);
                $('#Account').val(rs.data.Account);
                $('#Email').val(rs.data.Email);
                $('#phoneNum').val(rs.data.Phone);
                $('#fullAddress').val(rs.data.Address);
                let html2 = '<div class="tab-function">';
                html2 += '<a class="btn btn-outline-primary" onclick="updateUserInfo(this);">Cập nhật</a>';

                if (rs.data.Enable === true) {
                    html2 += '<a class="btn btn-outline-danger" onclick="changeUserActivation()">Huỷ kích hoạt</a></div>';
                    html2 += '<input type="hidden" id="Enable" value="false"></div>';
                } else {
                    html2 += '<a class="btn btn-outline-success" onclick="changeUserActivation()">Kích hoạt</a></div>';
                    html2 += '<input type="hidden" id="Enable" value="true"></div>';
                }

                $('#info-detail').append(html2);
            }
        }

        const updateUserInfo = async function (el) {
            let model = {
                Avatar: $('#Thumnail').val(),
                UserId : $('#userId').val(),
                Name: $('#Name').val(),
                Password: $('#password').val(),
                Email: $('#Email').val(),
                Address: $('#fullAddress').val(),
                Phone: $('#phoneNum').val(),
                SearchName: '',
            }

            model.SearchName = RemoveVietnameseTones(model.Name);
            $(el).addClass('is-loading')
            let rq = await fetch(Enum.ApiUrl + '/api/ManageUser/UpdateUser', {
                method: 'post',
                headers: Enum.OptionAdminHeaderDefault,
                body: JSON.stringify(model)
            });
            let rs = await rq.json();
            $(el).removeClass('is-loading')
            if (AdminCheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                alert('Cập nhật thông tin thành công!');
                window.location.reload();
            }
        }

        const changeUserActivation = async function () {
            let UserId = $('#userId').val();
            let enable = $('#Enable').val();

            let rq = await fetch(Enum.ApiUrl + '/api/ManageUser/ChangeUserActivation?Userid=' + UserId + '&enable=' + enable, {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault,

            });
            let rs = await rq.json();

            if (AdminCheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                alert('Cập nhật trạng thái tài khoản thành công!');
                window.location.reload();
            }
        }


        const openModal = function () {
            $('#modal').css('display', 'flex');
        }

        const closeModal = function () {
            $('#modal').css('display', 'none');
        }

        $('.preview').addClass('img-enlargable').click(function () {
            var src = $(this).css('background-image');
            src = src.replace(/(url\(|\)|")/g, '');
            console.log(src);
            $('<div>').css({
                background: 'RGBA(0,0,0,.5) url(' + src + ') no-repeat center',
                backgroundSize: 'contain',
                width: '100%', height: '100%',
                position: 'fixed',
                zIndex: '10000',
                top: '0', left: '0',
                cursor: 'zoom-out'
            }).click(function () {
                $(this).remove();
            }).appendTo('body');
        });

        const initPage = async function () {
            await getUserDetail();

            $(".modal-container").click(function (event) {
                event.stopPropagation();
            });

        }

        initPage();
    </script>
}




