

@{
    ViewBag.Title = "Index";
    ViewBag.Menu = "manage-admin";
}

@section styles{
    <style>
        .account-page-content .main-content {
            padding: 10px 10px 10px 10px !important;
        }

        .btn-custom-color {
            color: white;
            background-color: #8c237b;
            float: right;
        }

        .list-detail {
            background-color: white;
        }

            .list-detail .list-option {
                display: flex;
                padding: 20px;
                align-items: center;
            }

                .list-detail .list-option > div {
                    padding: 10px;
                }

                .list-detail .list-option .search-keyword {
                }



                .list-detail .list-option select {
                    border-radius: 5px;
                    padding: 10px;
                }

        #list-user td a {
            padding-right: 10px;
            cursor: pointer;
        }

        .product-page-list a {
            cursor: pointer;
        }

        .active-custom {
            background-color: #3f87f5;
            color: white !important;
        }

        .user-info {
        }

            .user-info .name {
            }

            .user-info .rank {
            }

        .modal {
            position: fixed;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            background: rgba(0,0,0,0.4);
            display: none;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }

        .modal-container {
            background-color: #fff;
            width: 900px;
            max-width: calc(100% - 32px);
            min-height: 400px;
            position: relative;
            animation: modalFadeIn ease 0.5s;
            transition: top 0.4s, opacity 0.4s;
        }

        .modal-header {
            height: 70px;
            display: flex;
            align-items: center;
            justify-content: center !important;
            font-size: 20px;
            border-bottom: solid #ccc 0.5px;
            text-transform: uppercase;
        }

        .modal-body {
            width: 90%;
            margin: auto;
        }

        .modal-footer {
            width: 90%;
            margin: auto;
            justify-content: end;
            display: flex;
            gap: 10px;
            padding-bottom: 10px;
        }

            .modal-footer .update-btn {
                width: 100px;
                padding: 5px 5px;
                background-color: #435ebe;
                color: white;
                border-radius: 5px;
                cursor: pointer;
                border: solid #435ebe 1px;
            }

            .modal-footer .close-modal {
                width: fit-content;
                color: black;
                border: solid #ccc 0.5px;
                cursor: pointer;
                border-radius: 5px;
            }

        @@keyframes modalFadeIn {
            from {
                opacity: 0;
                transform: translateY(-200px);
            }

            to {
                transform: translateY(0px);
                opacity: 1;
            }
        }
    </style>
}


<div class="account-page-content">
    <div class="main-content">

        <div class="">
            <div class="tab-content m-t-15">
                <div class="tab-pane fade show active" id="">
                    <div class="list-detail">
                        @*<div class="list-option">
                                <div class="search-keyword" id="email-form" style="flex:1;">
                                    <input type="text" class="form-control" id="keyword" placeholder="Nhập từ khoá tìm kiếm" onkeyup="enterGetListUser(event)">
                                </div>

                            </div>*@
                        <div class="table-responsive" style="padding:15px;">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th scope="col" style="width:30%">Tài khoản</th>
                                        <th scope="col" style="width:30%">Tên Admin</th>
                                        <th scope="col" style="width:20%">Quyền</th>
                                        <th scope="col" style="width:20%"><button class="btn btn-primary" onclick="openCreateModal()"> Thêm tài khoản </button></th>
                                    </tr>
                                </thead>
                                <tbody id="list-user">
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="product-page-list">
</div>

<div id="modal" class="modal">
    <div class="modal-container">
        <div class="modal-header">Cập nhật thông tin</div>
        <div class="modal-body">
            <div class="form-group">
                <label class="font-weight-semibold" for="account">Tài khoản:</label>
                <input type="text" class="form-control" id="account" placeholder="Tên tài khoản" onkeyup="removeSpecialCharacter(this);">
            </div>
            <div class="form-group">
                <label class="font-weight-semibold" for="role">Quyền truy cập:</label>
                <select id="role" class="form-control">
                    <option value="ADMIN">Quản trị viên</option>
                    <option value="STAFF">Nhân viên</option>
                </select>
            </div>

            <div class="form-group">
                <label class="font-weight-semibold" for="nameAdmin">Tên admin:</label>
                <input type="text" class="form-control" id="nameAdmin" placeholder="Tên admin">
            </div>

            <div class="form-group">
                <label class="font-weight-semibold" for="password">Mật khẩu</label>
                <input type="password" class="form-control" id="password" placeholder="Mật khẩu">
            </div>
            <input type="text" id="userAdminId" value="" style="display:none" />

        </div>

        <div class="modal-footer">
            <button class="close-modal btn" onclick="closeModal()">Đóng</button>
            <button class="btn btn-primary" id="updateAdmin">Lưu</button>

        </div>

    </div>

</div>
@section Scripts{
    <script>

        @*const enterGetListUser = function (e) {
            if (e.keyCode === 13) {
                getListUser();
            }
        }*@

        const closeModal = function () {
            $('#account').val('');
            $('#nameAdmin').val('');
            $('#password').val('');

            $('#modal').css('display', 'none');
        }

        const openCreateModal = function () {
            $('#modal').css('display', 'flex');
            $('#updateAdmin').attr('onclick', 'CreateUserAdmin()');
        }

        const openModalUpdate = async function (el) {
            let id = $(el).data('id');

            let rq = await fetch(Enum.ApiUrl + '/api/ManageUserAdmin/GetUserAdmin?userAdminId='+id, {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rq.json();

            if (AdminCheckErrorResponse(rs) === false) return;

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {

                $('#account').val(rs.data.Account);
                $('#nameAdmin').val(rs.data.Name);
                $('#userAdminId').val(rs.data.UserAdminId);
                $('#role').val(rs.data.Role).change();
                $('#modal').css('display', 'flex');
                $('#updateAdmin').attr('onclick', 'UpdateUserAdmin()');
            }

        }

        var removeSpecialCharacter = function (inputAccount) {
            $(inputAccount).val(RemoveSpecialCharacters($(inputAccount).val()));
        }
        let _currentPage = 1;

        const getListAdmin = async function (page = 1) {
            _currentPage = page;

            //gọi api ở admin
            let rq = await fetch(Enum.ApiUrl + '/api/ManageUserAdmin/GetListUserAdmin', {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rq.json();

            if (AdminCheckErrorResponse(rs) === false) return;

            $('#list-user').html('');
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                @*$('#keyword').val('');
                $('.product-page-list').html('');
                for (let page = 1; page <= rs.data.TotalPage; page++) {
                    $('.product-page-list').append(`<a onclick="getListUser(${page});" data-page="${page}" class="product-page ${_currentPage === page ? 'active-custom' : ''}" id="page-num">${page}</a>`);
                }*@

                for (let index = 0; index < rs.data.length; index++) {
                    var x = rs.data[index];
                    let html = '<tr>';

                    html += '<td>' + GetObjectProperty(x, 'Account') + '</td>';
                    html += '<td>' + GetObjectProperty(x, 'Name') + '</td>';
                    if (x.Role == 'ADMIN') {
                        html += '<td>Quản trị viên</td>';
                    }
                    else if (x.Role == 'STAFF') html += '<td>Nhân viên</td>';
                    else html += '<td></td>';
                    html += '<td>';
                    html += '<a data-id="' + x.UserAdminId + '" onclick="openModalUpdate(this);"><button class="btn btn-primary btn-xs"><i class="fa-solid fa-pen-to-square"></i></button></a>';
                    html += '<a data-id="' + x.UserAdminId + '" onclick="DeleteUserAdmin(this);"><button class="btn btn-danger btn-xs"><i class="fa-solid fa-trash"></i></button></a> </td> </tr>';

                    $('#list-user').append(html);
                }
            }

        }

        const DeleteUserAdmin = async function (el) {
            let UserId = $(el).data('id');

            if (confirm('Bạn có chắc chắn muốn xoá tài khoản admin này?')) {
                let rq = await fetch(Enum.ApiUrl + '/api/ManageUserAdmin/DeleteUserAdmin?adminId=' + UserId, {
                    method: 'get',
                    headers: Enum.OptionAdminHeaderDefault,

                });
                let rs = await rq.json();

                if (AdminCheckErrorResponse(rs) === false) return;
                if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                    alert('Xoá tài khoản admin này thành công');
                    window.location.reload();
                }
            }

        }

        const CreateUserAdmin = async function () {
            let model = {
                Account: $('#account').val(),
                Name: $('#nameAdmin').val(),
                Password: $('#password').val(),
                Role: $('#role').val()
            }

            let rq = await fetch(Enum.ApiUrl + '/api/ManageUserAdmin/CreateUserAdmin', {
                method: 'post',
                headers: Enum.OptionAdminHeaderDefault,
                body: JSON.stringify(model)
            });
            let rs = await rq.json();

            if (AdminCheckErrorResponse(rs) === false) return;

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                alert('Thêm tài khoản quản trị thành công');
                window.location.reload();
            }
        }

        const UpdateUserAdmin = async function () {
            let model = {
                Account: $('#account').val(),
                Name: $('#nameAdmin').val(),
                Password: $('#password').val(),
                UserAdminId: $('#userAdminId').val(),
                Role: $('#role').val()
            }

            let rq = await fetch(Enum.ApiUrl + '/api/ManageUserAdmin/UpdateUserAdmin', {
                method: 'post',
                headers: Enum.OptionAdminHeaderDefault,
                body: JSON.stringify(model)
            });
            let rs = await rq.json();

            if (AdminCheckErrorResponse(rs) === false) return;

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                alert('Sửa tài khoản quản trị thành công');
                window.location.reload();
            }
        }

        const initPage = async function () {
            await getListAdmin();
        }

        initPage();
    </script>
}

