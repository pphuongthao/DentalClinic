
@{

}

<link href="~/Content/datepicker.min.css" rel="stylesheet" />
@section styles{
    <style>
        .form-add-customer {
            margin: auto;
            width: 600px;
        }

        #form-add .info-detail .form-custom {
            margin-bottom: 10px;
            display: flex;
            justify-content: center;
            gap: 20px;
            padding-top: 10px;
        }

            #form-add .info-detail .form-custom .label-custom {
                display: flex;
                min-width: 170px;
                font-size: 1rem;
                line-height: 1.4;
                align-items: center;
            }

                #form-add .info-detail .form-custom .label-custom label {
                    margin-bottom: 0;
                }

        .modal {
            position: fixed;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            background: rgba(0,0,0,0.4);
            display: none;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }

        .modal-container {
            background-color: #fff;
            width: 900px;
            max-width: calc(100% - 32px);
            position: relative;
            animation: modalFadeIn ease 0.5s;
            transition: top 0.4s, opacity 0.4s;
        }

        .modal-header {
            height: 70px;
            display: flex;
            align-items: center;
            justify-content: center !important;
            font-size: 20px;
            border-bottom: solid #ccc 0.5px;
            text-transform: uppercase;
        }

        .modal-body {
            width: 90%;
            margin: auto;
        }

        .modal-footer {
            width: 90%;
            margin: auto;
            justify-content: end;
            display: flex;
            gap: 10px;
            padding-bottom: 10px;
        }

            .modal-footer .update-btn {
                width: 100px;
                padding: 5px 5px;
                background-color: #435ebe;
                color: white;
                border-radius: 5px;
                cursor: pointer;
                border: solid #435ebe 1px;
            }

            .modal-footer .close-modal {
                width: 80px;
                color: black;
                border: solid #ccc 0.5px;
                cursor: pointer;
                border-radius: 5px;
            }

        .list-service-pick {
            display: flex;
            flex-direction: column;
        }

            .list-service-pick .item-pick {
                display: flex;
                align-items: center;
                font-weight: 600;
                padding: 5px 10px;
            }

                .list-service-pick .item-pick .icon-left {
                    flex: .5;
                }

                .list-service-pick .item-pick .content {
                    flex: 2;
                    display: flex;
                    justify-content: space-between;
                }

                    .list-service-pick .item-pick .content > div:first-child {
                        flex: 1;
                    }

                    .list-service-pick .item-pick .content > div:last-child {
                        flex: 1;
                        text-align: right;
                    }

                    .list-service-pick .item-pick .content > div:nth-child(2) {
                        flex: 1;
                        text-align: center;
                    }

                .list-service-pick .item-pick .button-delete {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    cursor: pointer;
                    width: 30px;
                    height: 30px;
                    border-radius: 50%;
                    font-size: 25px;
                    color: red;
                    padding: 0;
                    margin: 0;
                }

                    .list-service-pick .item-pick .button-delete:hover {
                        background-color: #cdcdcd;
                        animation: .2s ease-in-out;
                    }

        .total-amount {
            display: flex;
            justify-content: flex-end;
            gap: 20px;
            font-size: 18px;
            font-weight: bold;
            margin-right: 40px;
        }
    </style>
}


<div class="card">
    <input id="UserAppointmentId" value="@ViewBag.UserAppointmentId" type="hidden" />
    <div class="form-add-customer" id="form-add">
        <div style="padding: 20px; text-align: center;"><h2>Cập nhật lịch hẹn</h2></div>
        <div class="info-detail" id="info-detail">
            <div class="form-group">
                <label class="font-weight-semibold"> Khách hàng</label>
                <div style="display:flex">
                    <select class="form-control" id="UserIds">
                        <option value="">Chọn khách hàng</option>
                    </select>
                    <button class="btn btn-sm btn-primary btn-add-supplier" onclick="openAddUserModal()"><i class="fa-solid fa-plus"></i></button>
                </div>

            </div>
            <div class="form-group form-appointment">
                <label class="font-weight-semibold"> Bác sĩ</label>
                <div>
                    <select class="form-select" id="DoctorId">
                    </select>
                </div>
            </div>
            <div class="date-hour-form">
                <div class="form-group">
                    <label class="font-weight-semibold">Ngày hẹn</label>
                    <div class="date-pick">
                        <input class="form-control" id="date" placeholder="Chọn ngày khám" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="font-weight-semibold">Giờ hẹn</label>
                    <div>
                        <select class="form-select" id="hour">
                            <option value="">Chọn giờ khám</option>
                            <option value="8:00">8:00</option>
                            <option value="8:30">8:30</option>
                            <option value="9:00">9:00</option>
                            <option value="9:30">9:30</option>
                            <option value="10:00">10:00</option>
                            <option value="10:30">10:30</option>
                            <option value="11:00">11:00</option>
                            <option value="11:30">11:30</option>
                            <option value="12:00">12:00</option>
                            <option value="13:00">13:00</option>
                            <option value="13:30">13:30</option>
                            <option value="14:00">14:00</option>
                            <option value="14:30">14:30</option>
                            <option value="15:00">15:00</option>
                            <option value="15:30">15:30</option>
                            <option value="16:00">16:00</option>
                            <option value="16:30">16:30</option>
                            <option value="17:00">17:00</option>
                            <option value="17:30">17:30</option>
                            <option value="18:00">18:00</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="font-weight-semibold">Nhắc nhở - Trước:</label>
                    <div style="display: flex; width: 170px; gap: 5px;">
                        <select class="form-select" id="hourRemind">
                            <option>Giờ</option>
                            <option>00</option>
                            <option>01</option>
                            <option>02</option>
                            <option>03</option>
                            <option>04</option>
                            <option>05</option>
                            <option>06</option>
                            <option>12</option>
                        </select>
                        <select class="form-select" id="minuteRemind">
                            <option>Phút</option>
                            <option>00</option>
                            <option>05</option>
                            <option>10</option>
                            <option>15</option>
                            <option>30</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="font-weight-semibold"> Dịch vụ</label>
                <div>
                    <select class="form-select" id="ServiceId" onchange="onchageService(this);">
                    </select>
                </div>
                <div class="list-service-pick" id="list-service-pick">
                </div>
                <div class="total-amount">
                    <div class="text">
                        Tạm tính:
                    </div>
                    <div id="totalamount">

                    </div>
                    <div>
                        (VND)
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="font-weight-semibold" for="name">Ghi chú</label>
                <textarea class="form-control" aria-label="With textarea" style="resize:none;" placeholder="Nhập ghi chú" rows="3" id="UserNote"></textarea>
            </div>
            <div class="form-custom">
                <div class="form-footer" style="align-items: center;">
                    <button type="button" onclick="UpdateAppointment();" class="create-button btn btn-primary">Cập nhật</button>
                </div>
            </div>
        </div>
    </div>


</div>


@*Modal add user*@
<div id="modalAddUser" class="modal" onclick="closeModal()">
    <div class="modal-container">
        <div class="modal-header">Thêm khách hàng</div>
        <div class="modal-body">
            <div class="form-add-customer" id="form-add">
                <div class="info-detail" id="info-detail">
                    <input id="userId" style="display:none" value="" />
                    <div class="form-custom">
                        <div class="label-custom">
                            <label class="font-weight-semibold" for="Name">Họ tên:</label>
                        </div>
                        <input type="text" class="form-control" id="NameUser" placeholder="Họ và tên" value="">
                    </div>

                    <div class="form-custom">
                        <div class="label-custom">
                            <label class="font-weight-semibold" for="Email">Email:</label>
                        </div>
                        <input type="text" class="form-control" id="Email" placeholder="Email" value="">
                    </div>

                    <div class="form-custom">
                        <div class="label-custom">
                            <label class="font-weight-semibold" for="phoneNum">Số điện thoại:</label>
                        </div>
                        <input type="text" class="form-control" id="phoneNum" placeholder="Số điện thoại" value="">
                    </div>

                    <div class="form-custom">
                        <div class="label-custom">
                            <label class="font-weight-semibold" for="fullAddress">Địa chỉ:</label>
                        </div>
                        <input type="text" class="form-control" id="fullAddress" placeholder="Địa chỉ chi tiết" value="">
                    </div>
                    <div class="form-custom" style="display: flex; justify-content: flex-end;">
                        <div class="form-footer">
                            <button type="button" onclick="closeModal();" class="create-button btn btn-secondary">Đóng</button>
                            <button type="button" onclick="AddUser();" class="create-button btn btn-primary">Thêm</button>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>


@section Scripts{
    <script src="~/Scripts/helper.js"></script>
    <script src="~/Content/assets/vendors/sweetalert2/sweetalert2.all.min.js"></script>
    <script src="~/Content/assets/js/datepicker.min.js"></script>
    <script>
        $('#date').datepicker({
            format: 'dd-mm-yyyy'
        });
        const openAddUserModal = function () {
            $('#modalAddUser').css('display', 'flex');
        }
        const closeModal = function () {
            $('#modalAddUser').css('display', 'none');
            $('#NameUser').val('');
            $('#Email').val('');
            $('#phoneNum').val('');
            $('#fullAddress').val('');
        }
        const GetListDoctor = async function () {
            let rp = await fetch('/api/manageDoctor/GetListDoctor', {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            let rs = await rp.json();

            $('#DoctorId').html('<option value="" selected>Chọn bác sĩ</option>');
            for (let index = 0; index < rs.data.length; index++) {
                var x = rs.data[index]
                $('#DoctorId').append(`<option value="${x.DoctorId}">${x.Name}</option>`);
            }
        }
        const GetListService = async function () {
            let rp = await fetch('/api/manageServices/GetListService', {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            let rs = await rp.json();

            $('#ServiceId').html('<option value="" selected>Chọn dịch vụ</option>');
            for (let index = 0; index < rs.data.length; index++) {
                var x = rs.data[index]
                $('#ServiceId').append(`<option value="${x.ServiceId}" data-price="${x.Price}" data-time="${x.ExpectTime}">${x.Name}</option>`);
            }
        }
        const GetListUser = async function () {
            let rp = await fetch('/api/user/GetListUser', {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            let rs = await rp.json();

            $('#UserIds').html('<option value="" selected>Chọn khách hàng</option>');
            for (let index = 0; index < rs.data.length; index++) {
                var x = rs.data[index]
                $('#UserIds').append(`<option value=${x.UserId}>${x.Name}</option>`);
            }
        }

        const AddUser = async function () {
            let model = {
                UserId: '',
                Name: $('#NameUser').val(),
                SearchName: '',
                Email: $('#Email').val(),
                Phone: $('#phoneNum').val(),
                Address: $('#fullAddress').val()
            }
            model.SearchName = RemoveVietnameseTones(model.Name);
            if (model.Name === '') {
                alert("Bạn cần thêm họ tên."); return;
            }
            if (model.Email === '') {
                alert("Bạn cần thêm email."); return;
            }
            if (model.Phone === '') {
                alert("Bạn cần thêm số điện thoại."); return;
            }
            if (model.Address === '') {
                alert("Bạn cần thêm địa chỉ."); return;
            }
            const rp = await fetch('/api/AdminManageAppointment/AddUserAppointment', {
                method: 'post',
                headers: Enum.OptionAdminHeaderDefault,
                body: JSON.stringify(model)
            });
            let rs = await rp.json();

            console.log(rs);

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                if (rs.message !== '' && rs.message !== null) alert(rs.message);
                /*alert('Thêm khách hàng thành công');*/
                $('#UserIds').append(`<option selected value="${rs.data.UserId}">${rs.data.Name}</option>`);
                closeModal();
            }
        }

        ///
        const onchageService = async function (select) {
            let itemPick = $(select).find(':selected');
            let id = $(itemPick).val();
            let text = $(itemPick).text();
            let price = $(itemPick).data('price');
            let expectTime = $(itemPick).data('time');
            let listpick = $('#list-service-pick').find('.item-pick');
            let flag = 0;
            for (let index = 0; index < listpick.length; index++) {
                let item = $(listpick[index]);
                if ($(item).data('id') === id) {
                    flag++;
                }
            }
            if (flag === 0 && id !== '') {
                $('#list-service-pick').append(`
                                            <div class="item-pick" data-id="${id}" data-amount="${price}" data-time="${expectTime}">
                                                                    <div class="icon-left">
                                                                        -
                                                                    </div>
                                                                    <div class="content">
                                                                        <div>${text}</div>
                                                                        <div>${expectTime} (phút)</div>
                                                                        <div>${NumberFormat(parseInt(price))} đ</div>
                                                                    </div>
                                                                    <div class="button-delete" onclick="deleteButton(this);">
                                                                        x
                                                                    </div>
                                                                </div>
                                            `);
            }
            totalPrice();
        }
        var totalPrice = function () {
            let listPriceService = $('#list-service-pick').find('.item-pick');
            let totalPrice = 0;
            for (let i = 0; i < listPriceService.length; i++) {
                totalPrice += parseInt($(listPriceService[i]).data('amount'));
            }
            $('#totalamount').text(NumberFormat(totalPrice));
            let totalForm = $('.form-group').find('.total-amount');
            totalPrice === 0 ? $(totalForm).hide() : $(totalForm).show();
        }
        const deleteButton = function (button) {
            $(button).closest('.item-pick').remove();
            totalPrice();
        }


        const UpdateAppointment = async function () {
            if (confirm('Bạn có chắc muốn cập nhật lịch hẹn này?') === false) return;
            let date = $('#date').val().split('-');
            let hour = $('#hour').val().split(':');
            let listService = [];
            let listDataPick = $('#list-service-pick').find('.item-pick');
            for (let i = 0; i < listDataPick.length; i++) {
                listService.push({
                    ServiceId: $(listDataPick[i]).data('id'),
                    ExpectTime: $(listDataPick[i]).data('time')
                });
            }
            let model = {
                UserAppointmentId: $('#UserAppointmentId').val(),
                DoctorId: $('#DoctorId').find(':selected').val(),
                UserId: $('#UserIds').find(':selected').val(),
                Day: date[0],
                Month: date[1],
                Year: date[2],
                Hour: hour[0],
                Minute: hour[1],
                ListServiceId: listService,
                Remind: $('#hourRemind').find(':selected').val() + ":" + $('#minuteRemind').find(':selected').val() + ":" + "00.000",
                UserNote: $('#UserNote').val()
            }
            console.log(model);
            let url = '/api/AdminManageAppointment/UpdateAppointment';
            if (GetObjectProperty(model, 'UserAppointmentId') === '') url = '/api/AdminManageAppointment/AddAppointment';
            const rp = await fetch(url, {
                method: 'post',
                headers: Enum.OptionAdminHeaderDefault,
                body: JSON.stringify(model)
            });
            let rs = await rp.json();


            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                alert('Cập nhật lịch hẹn thành công')
                window.location.href = '/Admin/adminmanageappointment/manageappointment';
            }
        }
        const GetAppointment = async function () {
            const id = $('#UserAppointmentId').val();
            console.log(id)
            if (id === '' || id === null || typeof id === 'undefined') return;
            let rp = await fetch('/api/AdminManageAppointment/GetUserAppointmentById?id=' + id, {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rp.json();
            console.log(rs);
            let item = rs.data;
            $('#UserIds').val(item.userAppointment.UserId);
            $('#DoctorId').val(item.userAppointment.DoctorId);
            $('#date').val((item.userAppointment.Day >= 10 ? item.userAppointment.Day : '0' + item.userAppointment.Day) + "-" + (item.userAppointment.Month >= 10 ? item.userAppointment.Month : '0' + item.userAppointment.Month) + "-" + item.userAppointment.Year);
            $('#hour').val(item.userAppointment.Hour + ":" + (item.userAppointment.Minute >= 10 ? item.userAppointment.Minute : '0' + item.userAppointment.Minute));
            let remind = item.userAppointment.Remind;
            let hour = remind.split(':')[0];
            $('#hourRemind').val(hour);
            let minute = remind.split(':')[1];
            $('#minuteRemind').val(minute);
            $('#UserNote').val(item.userAppointment.UserNote);

            for (index = 0; index < item.lsService.length; index++) {
                $('#list-service-pick').append(`
                                            <div class="item-pick" data-id="${item.lsService[index].ServiceId}" data-amount="${item.lsService[index].Price}" data-time="${item.lsService[index].ExpectTime}">
                                                                    <div class="icon-left">
                                                                        -
                                                                    </div>
                                                                    <div class="content">
                                                                        <div>${item.lsService[index].Name}</div>
                                                                        <div>${item.lsService[index].ExpectTime} (phút)</div>
                                                                        <div>${NumberFormat(parseInt(item.lsService[index].Price))} đ</div>
                                                                    </div>
                                                                    <div class="button-delete" onclick="deleteButton(this);">
                                                                        x
                                                                    </div>
                                                                </div>
                                            `);
            }
        }
        const InitPage = async function () {
            await GetListUser();
            await GetListDoctor();
            await GetListService();
            await GetAppointment();
            $(".modal-container").click(function (event) {
                event.stopPropagation();
            });
            totalPrice();
        }
        InitPage();

    </script>
}