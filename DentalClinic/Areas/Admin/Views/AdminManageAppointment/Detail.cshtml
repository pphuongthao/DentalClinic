
@{
    ViewBag.Title = "Detail";
    ViewBag.Menu = "manage-appointment";
}

@section styles{
    <style>


        .header-order-info {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .body-order-info {
            padding: 20px;
            display: flex;
            justify-content: space-between;
        }

            .body-order-info .row-table {
                display: flex;
                gap: 5px;
            }

                .body-order-info .row-table .row-table-title {
                    min-width: 140px;
                }

                .body-order-info .row-table .row-table-value {
                    flex: 1;
                }

        .totalMoney {
            display: flex;
            justify-content: flex-end;
            gap: 20px;
            margin-right: 50px;
        }

            .totalMoney .title-header-order {
                font-size: 18px;
            }

            .totalMoney .total-price-header-order {
                font-size: 18px;
                color: red;
            }
        .modalAddService {
            position: fixed;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            background: rgba(0,0,0,0.4);
            display: none;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }

        .modal-container {
            background-color: #fff;
            width: 700px;
            max-width: calc(100% - 32px);
            min-height: 300px;
            position: relative;
            animation: modalFadeIn ease 0.5s;
            transition: top 0.4s, opacity 0.4s;
        }

        .modal-header {
            height: 70px;
            display: flex;
            align-items: center;
            justify-content: center !important;
            font-size: 20px;
            border-bottom: solid #ccc 0.5px;
            text-transform: uppercase;
        }

        .modal-body {
            width: 90%;
            margin: auto;
        }

        .modal-footer {
            width: 90%;
            margin: auto;
            justify-content: end;
            display: flex;
            gap: 10px;
            padding-bottom: 10px;
            padding-top: 10px;
        }

            .modal-footer .update-btn {
                width: 100px;
                padding: 5px 5px;
                background-color: #435ebe;
                color: white;
                border-radius: 5px;
                cursor: pointer;
                border: solid #435ebe 1px;
            }

            .modal-footer .close-modal {
                width: fit-content;
                color: black;
                border: solid #ccc 0.5px;
                cursor: pointer;
                border-radius: 5px;
            }
        .list-service-pick {
            display: flex;
            flex-direction: column;
        }

            .list-service-pick .item-pick {
                display: flex;
                align-items: center;
                font-weight: 600;
                padding: 5px 10px;
            }

                .list-service-pick .item-pick .icon-left {
                    flex: .5;
                }

                .list-service-pick .item-pick .content {
                    flex: 2;
                    display: flex;
                    justify-content: space-between;
                }

                    .list-service-pick .item-pick .content > div:first-child {
                        flex: 1;
                    }

                    .list-service-pick .item-pick .content > div:last-child {
                        flex: 1;
                        text-align: right;
                    }

                    .list-service-pick .item-pick .content > div:nth-child(2) {
                        flex: 1;
                        text-align: center;
                    }

                .list-service-pick .item-pick .button-delete {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    cursor: pointer;
                    width: 30px;
                    height: 30px;
                    border-radius: 50%;
                    font-size: 25px;
                    color: red;
                    padding: 0;
                    margin: 0;
                }

                    .list-service-pick .item-pick .button-delete:hover {
                        background-color: #cdcdcd;
                        animation: .2s ease-in-out;
                    }
    </style>
}

<input id="UserAppointmentId" value="@ViewBag.UserAppointmentId" type="hidden" />
<div class="card">
    <h4 style="text-align: center; padding-top: 20px;">Nha khoa Phương Thảo</h4>
    <h6 style="text-align: center;">Địa chỉ: Số 16, ngách 2, ngõ 343, phố Đội Cấn, P. Liễu Giai, Q. Ba Đình, TP Hà Nội</h6>
    <div class="cart-index">
        <div class="cart-body">
            <div class="list-order-info">
                <div class="item-order-info">
                    <div class="body-order-info">
                        <div class="table-left-order">
                            <table>
                                <tbody>
                                    <tr>
                                        <td>
                                            <div class="row-table">
                                                <div class="row-table-title">Họ và tên:</div>
                                                <div class="row-table-value" id="ReceiverName"></div>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="row-table">
                                                <div class="row-table-title">Số điện thoại:</div>
                                                <div class="row-table-value" id="PhoneNum"></div>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="row-table">
                                                <div class="row-table-title">Email:</div>
                                                <div class="row-table-value" id="ReceiverEmail"></div>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="row-table">
                                                <div class="row-table-title">Địa chỉ:</div>
                                                <div class="row-table-value" id="ReceiverAddr"></div>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="header-order-info">
                            <table>
                                <tbody>
                                    <tr>
                                        <td>
                                            <div class="row-table">
                                                <div class="row-table-title">Mã lịch hẹn:</div>
                                                <div class="row-table-value" id="AppointmentCode"></div>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="row-table">
                                                <div class="row-table-title">Thời gian hẹn:</div>
                                                <div class="row-table-value" id="Date"></div>
                                            </div>
                                        </td>
                                    </tr>

                                </tbody>
                            </table>
                        </div>


                    </div>

                </div>


            </div>
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th style="width: 100px;">STT</th>
                            <th style="">Dịch vụ</th>
                            <th style="width:250px; padding-left: 60px;">Đơn giá (VNĐ)</th>
                        </tr>
                    </thead>
                    <tbody id="order-detail">
                    </tbody>
                </table>
            </div>
            <div class="totalMoney">
                <div class="title-header-order" style="font-weight:bold">Tổng tiền:</div>
                <div class="total-price-header-order" id="SumTotalPrice">

                </div>
            </div>
            <div class="user-note" style="display: flex; gap: 5px; padding: 5px 10px;">
                <div>Ghi chú:</div>
                <div id="UserNote"></div>
            </div>
            <div class="reason-reject" style="display: flex; gap: 5px; padding: 5px 10px;">
                <div>Lý do hủy:</div>
                <div id="ReasonReject"></div>
            </div>
        </div>
    </div>
</div>
<div style="display: flex; justify-content: flex-end; gap: 10px;">
    <div><button class="btn btn-primary" onclick="OpenModalAddService();">Thêm dịch vụ</button></div>
    <di><button class="btn btn-primary" onclick="ExportPdfOrder();">In hóa đơn</button></di>
</div>

@*Modal add service*@
<div id="modal" class="modalAddService">
    <div class="modal-container">
        <div class="modal-header">Thêm dịch vụ</div>
        <div class="modal-body">
            <div class="form-group">
                <label class="font-weight-semibold"> Dịch vụ</label>
                <div>
                    <select class="form-select" id="ServiceId" onchange="onchageService(this);">
                    </select>
                </div>
                <div class="list-service-pick" id="list-service-pick">
                </div>
            </div>
            <input id="UserAppointmentId" hidden />
        </div>

        <div class="modal-footer">
            <button class="close-modal btn" onclick="closeModal()">Đóng</button>
            <button class="btn btn-primary" onclick="AddService()">Lưu</button>

        </div>

    </div>

</div>
@section Scripts{
    <script>
        const closeModal = function () {
            $('#ServiceId').val('').change();
            $('#list-service-pick').html('');
            $('.modalAddService').css('display', 'none');
        }

        const OpenModalAddService = function () {
            $('.modalAddService').css('display', 'flex');

        }
        const userAppointment = {
            Name: '',
            Phone: '',
            Email: '',
            Address: '',
            AppointmentCode: '',
            Date: '',
            TotalAmount: 0
        };
        const listServiceBooked = [];

        const GetListAppointmentDetailUser = async function () {
            let userAppointmentId ='@ViewBag.UserAppointmentId';
            let rq = await fetch(Enum.ApiUrl + '/api/AdminManageAppointment/GetAppointmentDetail?userAppointmentId=' + userAppointmentId, {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rq.json();
            console.log(rs);
            if (CheckErrorResponse(rs) === false) return;
            $('#order-detail').html('')
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {

                for (let index = 0; index < rs.data.listUserAppointmentDetail.length; index++) {
                    var x = rs.data.listUserAppointmentDetail[index];
                    let html = '<tr>';
                    html += `<td>${index + 1}</td>`;
                    html += '<td><div class="text-item-product-payment" >' + x.NameService +'</div></td>';
                    html += '<td><div class="show-number-item-product-payment">';
                    html += '<div class="number-item-product-payment" style="text-align:center">' + NumberFormat(x.PriceService) + '</div></div></td>';
                    html += '</div></td></tr>';

                    $('#order-detail').append(html);
                    listServiceBooked.push(rs.data.listUserAppointmentDetail[index]);
                }
                $('#ReceiverName').html(rs.data.userAppointment.Name);
                $('#PhoneNum').html('<a href="tel:' + rs.data.userAppointment.Phone + '">' + rs.data.userAppointment.Phone + '</a>');
                $('#ReceiverEmail').html('<a href="mailto:' + rs.data.userAppointment.Email+'">' + rs.data.userAppointment.Email+'</a>');
                $('#ReceiverAddr').html(rs.data.userAppointment.Address);
                $('#AppointmentCode').html(rs.data.userAppointment.AppointmentCode);
                $('#Date').html(rs.data.userAppointment.Hour + ':' + (rs.data.userAppointment.Minute >= 10 ? rs.data.userAppointment.Minute : '0' + rs.data.userAppointment.Minute) + ' ' + (rs.data.userAppointment.Day >= 10 ? rs.data.userAppointment.Day : '0' + rs.data.userAppointment.Day) + '/' + (rs.data.userAppointment.Month >= 10 ? rs.data.userAppointment.Month : '0' + rs.data.userAppointment.Month) + '/' + rs.data.userAppointment.Year);
                $('#SumTotalPrice').html(NumberFormat(rs.data.userAppointment.TotalAmount) + ' <sup>VNĐ<sup>');


                
                
                rs.data.userAppointment.UserNote === null ? $('.user-note').hide() : $('#UserNote').html(rs.data.userAppointment.UserNote);
                rs.data.reasonReject === null ? $('.reason-reject').hide() : $('#ReasonReject').html(rs.data.reasonReject.Message);

                userAppointment.Date = rs.data.userAppointment.Hour + ':' + (rs.data.userAppointment.Minute > 10 ? rs.data.userAppointment.Minute : '0' + rs.data.userAppointment.Minute) + ' ' + (rs.data.userAppointment.Day > 10 ? rs.data.userAppointment.Day : '0' + rs.data.userAppointment.Day) + '/' + (rs.data.userAppointment.Month > 10 ? rs.data.userAppointment.Month : '0' + rs.data.userAppointment.Month) + '/' + rs.data.userAppointment.Year;
                userAppointment.Name = rs.data.userAppointment.Name;
                userAppointment.Phone = rs.data.userAppointment.Phone;
                userAppointment.Email = rs.data.userAppointment.Email;
                userAppointment.Address = rs.data.userAppointment.Address;
                userAppointment.TotalAmount = rs.data.userAppointment.TotalAmount;
                userAppointment.AppointmentCode = rs.data.userAppointment.AppointmentCode;
            }
        }

        const GetListService = async function () {
            let rp = await fetch('/api/manageServices/GetListService', {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rp.json();

            $('#ServiceId').html('<option value="" selected>Chọn dịch vụ</option>');
            for (let index = 0; index < rs.data.length; index++) {
                var x = rs.data[index]
                $('#ServiceId').append(`<option value="${x.ServiceId}" data-price="${x.Price}" data-time="${x.ExpectTime}">${x.Name}</option>`);
            }
        }

        var ListServiceId = [];
        const AddService = async function () {
            let ListServiceAdd = $('#list-service-pick').find('.item-pick');
            for (let i = 0; i < ListServiceAdd.length; i++) {
                ListServiceId.push(
                    {
                        ServiceId: $(ListServiceAdd[i]).data('id')
                    });
            }
            let model = {
                UserAppointmentId: '@ViewBag.UserAppointmentId',
                ListServiceId: ListServiceId
            }
            let rp = await fetch('/api/AdminManageAppointment/AddServiceToAppointmentDetail', {
                method: 'post',
                headers: Enum.OptionAdminHeaderDefault,
                body: JSON.stringify(model)
            });
            let rs = await rp.json();
            if (CheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                alert('Thêm thành công');
                window.location.reload();
            }
        }
        const onchageService = async function (select) {
            let itemPick = $(select).find(':selected');
            let id = $(itemPick).val();
            let text = $(itemPick).text();
            let price = $(itemPick).data('price');
            let expectTime = $(itemPick).data('time');
            let listpick = $('#list-service-pick').find('.item-pick');
            let flag = 0;
            for (let index = 0; index < listpick.length; index++) {
                let item = $(listpick[index]);
                if ($(item).data('id') === id) {
                    flag++;
                }
            }
            if (flag === 0 && id !== '') {
                $('#list-service-pick').append(`
                                <div class="item-pick" data-id="${id}" data-amount="${price}" data-time="${expectTime}">
                                                        <div class="icon-left">
                                                            -
                                                        </div>
                                                        <div class="content">
                                                            <div>${text}</div>
                                                            <div>${expectTime} (phút)</div>
                                                            <div>${NumberFormat(parseInt(price))} đ</div>
                                                        </div>
                                                        <div class="button-delete" onclick="deleteButton(this);">
                                                            x
                                                        </div>
                                                    </div>
                                `);
            }
            totalPrice();
        }
        const deleteButton = function (button) {
            $(button).closest('.item-pick').remove();
        }
        const initPage = async function () {
            await GetListAppointmentDetailUser();
            await GetListService();
        }

        initPage();

        var ExportOrder = async function () {

            let model = {
                UserAppointmentExportPdf: userAppointment,
                ListServiceBooked: listServiceBooked

            };

            if (confirm("Xác nhận xuất hóa đơn !")) {
                let rq = await fetch('/api/AdminManageAppointment/ExportFileExcelOrder', {
                    method: 'POST',
                    headers: Enum.OptionAdminHeaderDefault,
                    body: JSON.stringify(model)
                });
                let rs = await rq.blob();
                var fileName = "Thông tin hóa đơn mã " + model.UserAppointmentExportPdf.AppointmentCode + ".xlsx";
                if (window.navigator.msSaveOrOpenBlob) {
                    window.navigator.msSaveOrOpenBlob(rs, fileName);
                } else {
                    const a = document.createElement('a');
                    document.body.appendChild(a);
                    const url = window.URL.createObjectURL(rs);
                    a.href = url;
                    a.download = fileName;
                    a.click();
                    setTimeout(() => {
                        window.URL.revokeObjectURL(url);
                        document.body.removeChild(a);
                    }, 0)
                }
                alert("Hóa đơn đang được tải xuống !");
            }
        }

        const ExportPdfOrder = async function () {
            let model = {
                UserAppointmentExportPdf: userAppointment,
                ListServiceBooked: listServiceBooked
            };

            if (confirm("Xác nhận xuất hóa đơn !")) {
                let rq = await fetch('/api/AdminManageAppointment/ExportPdf', {
                    method: 'POST',
                    headers: Enum.OptionAdminHeaderDefault,
                    body: JSON.stringify(model)
                });
                let rs = await rq.blob();
                console.log(rs);
                var fileName = "Thông tin hóa đơn mã " + model.UserAppointmentExportPdf.AppointmentCode + ".pdf";
                console.log(fileName);
                if (window.navigator.msSaveOrOpenBlob) {
                    window.navigator.msSaveOrOpenBlob(rs, fileName);
                } else {
                    const a = document.createElement('a');
                    document.body.appendChild(a);
                    const url = window.URL.createObjectURL(rs);
                    a.href = url;
                    a.download = fileName;
                    a.click();
                    setTimeout(() => {
                        window.URL.revokeObjectURL(url);
                        document.body.removeChild(a);
                    }, 0)
                }
                alert("Hóa đơn đang được tải xuống !");

            }
        }
    </script>
}

